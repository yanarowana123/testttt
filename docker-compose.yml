version: '3.8'

#Docker Networks
networks:
    laravel:
        driver: bridge

#Volumes
volumes:
    dbdata:
        driver: local

# Workflow
services:
    nginx:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        container_name: nginx
        ports:
            - "8080:80"
        volumes:
            - .:/var/www/html:delegated
        depends_on:
            - php
            - mysql
        networks:
            - laravel

    mysql:
        image: mysql
        container_name: mysql
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'dbdata:/var/lib/mysql'
        networks:
            - laravel

    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: php
        volumes:
            - .:/var/www/html:delegated
        ports:
            - "9000:9000"
        networks:
            - laravel

    composer:
        build:
            context: .
            dockerfile: ./docker/php/composer/Dockerfile
        container_name: composer
        volumes:
            - .:/var/www/html
        working_dir: /var/www/html
        depends_on:
            - php
        user: laravel
        networks:
            - laravel
        entrypoint: [ 'composer', '--ignore-platform-reqs' ]

    artisan:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: artisan
        volumes:
            - .:/var/www/html:delegated
        depends_on:
            - mysql
        working_dir: /var/www/html
        user: laravel
        entrypoint: [ 'php', '/var/www/html/artisan' ]
        networks:
            - laravel
